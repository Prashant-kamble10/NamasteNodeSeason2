"4.19.2" = "major.minor.patch"

"4.19.2" = fixed version

"^4.19.2" = carret, auto updates minor version

"~4.19.2" = tilde, auto upda' patch version

BETTER to use app.get() for routing, rather than using app.use()

app.get() matches exact path,
app.use() not sure to match path it can match subpath also.

app.get(): This method in Express is used for handling GET requests for an exact path. It only matches requests where the URL path is exactly what you specify. For instance, if you write app.get('/home', callback), it will only respond to requests made to /home and not to any sub-paths like /home/about.

app.use(): This is a middleware function that is more flexible with path matching. It can handle not only the exact path but also any sub-paths starting with the specified path. So, if you write app.use('/home', callback), it will match /home, /home/about, /home/contact, and any other route that starts with /home.

This flexibility with app.use() makes it particularly useful for setting up middleware that should apply to a group of routes (like authentication or logging) rather than a single, specific path.



Q. Difference btn package.json and package-lock.json

package.json
Purpose: This file lists the basic metadata for a project, including its dependencies, scripts, version, and other configurations.
Dependencies: It specifies the packages a project needs to run but doesn't lock them to exact versions by default (though you can specify exact versions if needed).
Usage: It’s used when someone installs a project, and npm uses it to install the latest versions of the dependencies that match the version ranges listed.
Manual Editing: You typically edit package.json manually to add scripts, dependencies, or configuration settings.


package-lock.json
Purpose: This file is automatically generated to lock the exact versions of all dependencies and their sub-dependencies. It ensures consistent installs across different environments.
Dependencies: It records the full dependency tree, locking each package to a specific version, ensuring reproducible builds.
Usage: When npm install is run, npm refers to package-lock.json to install exactly the same versions of dependencies as before, regardless of version updates.
Automatic Generation: This file is created and updated automatically by npm whenever dependencies change. You shouldn’t manually edit this file.